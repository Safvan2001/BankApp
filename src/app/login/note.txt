Data Binding in Angular
------------------------

ts - component
html - view

1.one way Binding

     1.1 component to view -[ts->html]

          1.1.1 string interpolation - {{}}
          1.1.2 property binding  -  [property]="value"

      1.2 view to component
          1.2.1 event binding - (eventname)="method name()"
          1.2.2 event binding using $event - (eventname)="methodname($event)"
          1.2.3 event binding using template rendering variable  -  #variable


2.two way Binding
      2.1 ngmodel  [(ngmodel)]="value"
                   FormsModule  (3rd party Library)




    Redirection in Angular
    ----------------------

Redirection in JavaScript-window.location

navigateByUrl - method used for Redirection

Router - predefined class

AppRoutingModule - module

package/module-main folder


Dependency injection
--------------------
- to use a method of class in another class
- in constructor 

-steps          access specifier - public or private
                 variable
                 class name
                           private variable:Classname


Angular services
-----------------
ng g s servicename



routerLink
...........
eg
routerLink="/transaction"



Angular Directives :- Uses to manage DOM in Angular
------------------

1.structural directives - uses to handle structured datas in view of a component

     - ngFor : can directly apply in html to access elements from array

     - ngIf  : can directly apply in html to access elements from array


2.Component directives

3.Attribute directives - uses to apply attributes to DOM
     
     - ngClass : to apply class attribute


Form validation in Angular
----------------------------
We can create forms in two way
    1. Template driven Form

    2.Model driven Form
          - Reactive Form
          ----------------

          ReactiveFormsModule : module used to create module forms

          FormBuilder       - class of ReactiveFormsModule
                     -group,array,control
                     
  Validate Model Form
    -------------------

    Validator - a class in angular it includes methods for apply validation


    Access Errors in Validator AppRoutingModule
        ...........................................
           
                this.registerForm.get('uname')?.errors 
                                       
                                       -valid/invalid error
                                       -valid:Empty response
                                       -invalid:content



   Local Storage in Angular
   ------------------------
   localStorage used to datas permenently.(low capacity) 

   -store : localStorage.setItem()
   -access : localStorage.getItem()
   -delete : localStorage.removeItem()                                    


Parent Child Components communication in Angular
................................................
@Input  - parent to child data sharing

@Output - child to parent data sharing

datas only share via selector of Component

User Defined Event Creation In Angular
.......................................

EventEmitter (form angular core) -class used to create events
emit()                           -to start the event


Date in Angular
................
Date -class

-create an object of class Date to access Date and Time


Angular Pipe
.............

to transform datas into another format 
 eg- date Pipe


CLIENT SERVER INTEGRATION
.....................,....
..........................

http request Creation
......................

HttpClientModule -module
HttpClient   -class



Asynchronous request in ts
...........................
js- promise  ----resolve   then()
             ----reject    catch()

ts- observable  --- resolve then()
                --- reject  catch()

       Rxjs(Reactive Extension for js)- Library used to solve Asynchronous code in ts         



append token in headers of http
...............................

create header 

  HttpHeaders - class  to create header object


steps
-----
   let headers=new HttpHeaders()

append token in header object
   
   headers.append('access-token', token)

